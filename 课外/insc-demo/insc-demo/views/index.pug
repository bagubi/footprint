doctype html  
html  
    head  
        title insctraders
        link(rel='stylesheet', href='/stylesheets/index.css')
        script(src="https://c0f4f41c-2f55-4863-921b-sdk-docs.github.io/cdn/metamask-sdk.js")
        script(src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js")
        script(src="/javascripts/abi.js")  
    body  
    div.header
        h1 insctraders
        div.connect(onclick="ConnectWallet()")#Address Connect Wallet
    div.display
        div.index
            a(href="/") Overview
            a(href="/ins20") INS20 
        div.information
            div.head
                h2 Overview
            div.data
                div.dataCard
                    p.dataLabel Total Inscriptions
                    p.dataNumber=InscriptionsNumber
                div.dataCard
                    p.dataLabel Total Addresses
                    p.dataNumber=AddressNumber
                div.dataCard
                    p.dataLabel Total Transactions
                    p.dataNumber=TransactionsNumber
            div.head
                h2 Deploy Your Inscription
            div.formCard
                form(action="/api/deploy" method="post")
                    div.inputCard
                        p.inputLabel Tick
                        input(type="text" name="data" placeholder="Enter some tick name")
                    div.inputCard
                        p.inputLabel Max
                        input(type="number" name="data" placeholder="Enter the tick max number")
                    div.inputCard
                        p.inputLabel Lims
                        input(type="number" name="data" placeholder="Enter the tick signle limits")
                    button.deployButton(type="submit") Deploy        
    p.love Power generation for ❤  
    //-- Web3 操作
    script.
        let accounts = [];
        const sdk = new MetaMaskSDK.MetaMaskSDK({
        dappMetadata: {
            name: "Pure JS example",
            url: window.location.host,
        },
        logging: {
                sdk: false,
            }
        });
        
        //-- 实例化Web3
        web3 = new Web3(web3.currentProvider);
        const contract = new web3.eth.Contract(abi, '0xbbaeC697BdB118245a96d30c1aC7eD5cFE099E61');

        //-- 连接钱包
        async function ConnectWallet() {
            accounts = await ethereum
                .request({
                    method: 'eth_requestAccounts',
                    params: [],
                })
            document.getElementById("Address").innerHTML = accounts[0].substring(0,6)+"..."+accounts[0].substring(36,42);
            //-- 传递accounts给后端并写入数据库，标记用户数量的增加
            fetch('/api/accounts', {  
                method: 'POST',  
                headers: {  
                    'Content-Type': 'application/x-www-form-urlencoded'  
                },  
                body: 'accounts=' + encodeURIComponent(accounts[0])  
            })  
            .then(response => response.json())  
            .then(data => {  
                console.log(data);   
            })  
            .catch((error) => {  
                console.error('Error:', error);  
            });
        }
        //-- 传值给后端写入数据库  
        document.querySelector('form').addEventListener('submit', async function(e) {  
            e.preventDefault();  
            var dataInput = document.querySelectorAll('input[name="data"]');
            var data = [];
            for(var i =0;i<dataInput.length;i++){
                data.push(dataInput[i].value);
            }
            console.log(data);
            console.log("accounts",accounts);
            if(accounts.length == 0){
                alert("Please Connect Your MetaMask");
            }else{
                if(Number(data[1])<Number(data[2])){
                    alert("Please Check Your 'Max' & 'Lims' Number");
                }else{
                    var res = await insc_deploy(data);
                    // 使用fetch API发送POST请求  
                    fetch('/api/deploy', {  
                        method: 'POST',  
                        headers: {  
                            'Content-Type': 'application/x-www-form-urlencoded'  
                        },  
                        body: 'data=' + encodeURIComponent(data)  
                    })  
                    .then(response => response.json())  
                    .then(data => {  
                    console.log(data);  
                        for(var i =0;i<dataInput.length;i++){
                            dataInput[i].value = ''; // 清空输入框
                        }  
                    })  
                    .catch((error) => {  
                        console.error('Error:', error);  
                    });
                    alert("Inscription deploy successful, the txhash is: " + res);
                }
            }
        });

        //-- 调用交易的同步函数
        async function insc_deploy(deployInfo){
            const data = contract.methods.deploy("INS20", deployInfo[0], Number(deployInfo[1]), Number(deployInfo[2])).encodeABI();
            res = await ethereum.request({
                method: 'eth_sendTransaction',
                params: [
                    {
                        from: accounts[0],
                        to: '0xbbaeC697BdB118245a96d30c1aC7eD5cFE099E61',
                        value: '0x0',
                        data: data
                    }
                ]
            })
            return res;
        }